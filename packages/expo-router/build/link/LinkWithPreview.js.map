{"version":3,"file":"LinkWithPreview.js","sourceRoot":"","sources":["../../src/link/LinkWithPreview.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\n\nimport React, {\n  isValidElement,\n  useEffect,\n  useState,\n  type PropsWithChildren,\n  type ReactElement,\n} from 'react';\nimport { Button, type ButtonProps } from 'react-native';\n\nimport { useRouter } from '../hooks';\nimport { BaseExpoRouterLink } from './BaseExpoRouterLink';\nimport { Link } from './Link';\nimport { HrefPreview } from './preview/HrefPreview';\nimport { useLinkPreviewContext } from './preview/LinkPreviewContext';\nimport {\n  PeekAndPopActionView,\n  PeekAndPopPreviewView,\n  PeekAndPopTriggerView,\n  PeekAndPopView,\n} from './preview/native';\nimport { useScreenPreload } from './preview/useScreenPreload';\nimport { LinkProps } from './useLinkHooks';\nimport { shouldLinkExternally } from '../utils/url';\n\nexport function LinkWithPreview({ experimentalPreview, children, ...rest }: LinkProps) {\n  const router = useRouter();\n  const { setIsPreviewOpen } = useLinkPreviewContext();\n  const [isCurrentPreviewOpen, setIsCurrenPreviewOpen] = useState(false);\n  const [previewSize, setPreviewSize] = useState<{ width: number; height: number } | undefined>(\n    undefined\n  );\n\n  const { preload, updateNavigationKey, navigationKey } = useScreenPreload(rest.href);\n\n  useEffect(() => {\n    if (shouldLinkExternally(String(rest.href))) {\n      console.warn('External links previews are not supported');\n    }\n    if (rest.replace) {\n      console.warn('Using replace links with preview is not supported');\n    }\n  }, [rest.href, rest.replace]);\n\n  const triggerElement = React.useMemo(\n    () => getFirstChildOfType(children, LinkTrigger),\n    [children]\n  );\n  const menuElement = React.useMemo(() => getFirstChildOfType(children, LinkMenu), [children]);\n  const previewElement = React.useMemo(\n    () => getFirstChildOfType(children, LinkPreview),\n    [children]\n  );\n\n  const trigger = React.useMemo(\n    () =>\n      triggerElement ??\n      React.Children.toArray(children).filter(\n        (child) =>\n          !isValidElement(child) ||\n          !([Link.Menu, Link.Trigger, Link.Preview] as unknown[]).includes(child.type)\n      ),\n    [triggerElement, children]\n  );\n  const buttons = React.useMemo(\n    () =>\n      menuElement?.props.children\n        ? Array.isArray(menuElement?.props.children)\n          ? menuElement.props.children\n          : [menuElement?.props.children]\n        : [],\n    [menuElement]\n  );\n\n  const actionsHandlers = React.useMemo(\n    () =>\n      buttons\n        .filter(\n          (button) =>\n            isValidElement(button) && (button.type === Button || button.type === LinkMenuItem)\n        )\n        .reduce(\n          (acc, action) => ({\n            ...acc,\n            [action.props.title]: action.props.onPress as () => void,\n          }),\n          {} as Record<string, () => void>\n        ),\n    [buttons]\n  );\n  const preview = React.useMemo(\n    () =>\n      previewElement && previewElement.props.children ? (\n        previewElement\n      ) : (\n        <HrefPreview href={rest.href} />\n      ),\n    [previewElement, rest.href]\n  );\n\n  const contentSize = {\n    width: previewElement?.props.width ?? 0,\n    height: previewElement?.props.height ?? 0,\n  };\n\n  if (shouldLinkExternally(String(rest.href)) || rest.replace) {\n    return <BaseExpoRouterLink children={children} {...rest} />;\n  }\n\n  return (\n    <PeekAndPopView\n      nextScreenId={navigationKey}\n      preferredContentSize={contentSize}\n      onActionSelected={({ nativeEvent: { id } }) => {\n        actionsHandlers[id]?.();\n      }}\n      onWillPreviewOpen={() => {\n        preload();\n        setIsPreviewOpen(true);\n        setIsCurrenPreviewOpen(true);\n        // We need to wait here for the screen to preload. This will happen in the next tick\n        setTimeout(updateNavigationKey);\n      }}\n      onPreviewWillClose={() => {}}\n      onPreviewDidClose={() => {\n        setIsPreviewOpen(false);\n        setIsCurrenPreviewOpen(false);\n      }}\n      onPreviewTapped={() => {\n        router.navigate(rest.href, { __internal__PreviewKey: navigationKey });\n      }}>\n      <PeekAndPopTriggerView>\n        <BaseExpoRouterLink {...rest} children={trigger} ref={rest.ref} />\n      </PeekAndPopTriggerView>\n      <PeekAndPopPreviewView\n        onSetSize={({ nativeEvent: size }) => setPreviewSize(size)}\n        style={{ position: 'absolute', ...previewSize }}>\n        {(isCurrentPreviewOpen || rest.experimentalDisableLazyPreview) && preview}\n      </PeekAndPopPreviewView>\n      {menuElement}\n    </PeekAndPopView>\n  );\n}\n\nfunction getFirstChildOfType<PropsT>(\n  children: React.ReactNode | React.ReactNode[],\n  type: (props: PropsT) => unknown\n) {\n  return React.Children.toArray(children).find(\n    (child): child is ReactElement<PropsT> => isValidElement(child) && child.type === type\n  );\n}\n\ninterface LinkMenuItemProps {\n  title: string;\n  onPress: () => void;\n}\n\nexport function LinkMenuItem(_: LinkMenuItemProps) {\n  return null;\n}\ninterface LinkMenuProps {\n  children:\n    | ReactElement<ButtonProps | LinkMenuItemProps>\n    | ReactElement<ButtonProps | LinkMenuItemProps>[];\n}\n\nexport function LinkMenu({ children }: LinkMenuProps) {\n  return React.Children.map(children, (child) => {\n    if (isValidElement(child) && (child.type === Button || child.type === LinkMenuItem)) {\n      return <PeekAndPopActionView title={child.props.title} id={child.props.title} />;\n    }\n    return null;\n  });\n}\n\ninterface LinkPreviewProps extends PropsWithChildren {\n  width?: number;\n  height?: number;\n}\n\nexport function LinkPreview({ children, width, height }: LinkPreviewProps) {\n  return children;\n}\n\nexport function LinkTrigger({ children }: PropsWithChildren) {\n  return children;\n}\n"]}