{"version":3,"file":"Link.js","sourceRoot":"","sources":["../../src/link/Link.tsx"],"names":[],"mappings":";AAAA,YAAY,CAAC;;AAsDb,oBAMC;AAvDD,iCAAqC;AAErC,6DAA0D;AAC1D,uDAM2B;AAC3B,uEAA6D;AAa7D;;;;;;;;;;;;;;;;;;;;;;;;;GAyBG;AACH,SAAgB,IAAI,CAAC,KAAgB;IACnC,MAAM,SAAS,GAAG,IAAA,kCAAY,GAAE,CAAC;IACjC,IAAI,KAAK,CAAC,mBAAmB,IAAI,CAAC,SAAS,EAAE,CAAC;QAC5C,OAAO,CAAC,iCAAe,CAAC,IAAI,KAAK,CAAC,EAAG,CAAC;IACxC,CAAC;IACD,OAAO,CAAC,uCAAkB,CAAC,IAAI,KAAK,CAAC,EAAG,CAAC;AAC3C,CAAC;AAED,IAAI,CAAC,WAAW,GAAG,kBAAW,CAAC;AAC/B,IAAI,CAAC,IAAI,GAAG,0BAAQ,CAAC;AACrB,IAAI,CAAC,OAAO,GAAG,6BAAW,CAAC;AAC3B,IAAI,CAAC,OAAO,GAAG,6BAAW,CAAC;AAC3B,IAAI,CAAC,QAAQ,GAAG,8BAAY,CAAC","sourcesContent":["'use client';\n// Fork of @react-navigation/native Link.tsx with `href` and `replace` support added and\n// `to` / `action` support removed.\nimport { PropsWithChildren, JSX } from 'react';\n\nimport { resolveHref } from './href';\nimport { Href } from '../types';\nimport { BaseExpoRouterLink } from './BaseExpoRouterLink';\nimport {\n  LinkMenu,\n  LinkMenuItem,\n  LinkPreview,\n  LinkTrigger,\n  LinkWithPreview,\n} from './LinkWithPreview';\nimport { useIsPreview } from './preview/PreviewRouteContext';\nimport { LinkProps, WebAnchorProps } from './useLinkHooks';\n\nexport interface LinkComponent {\n  (props: PropsWithChildren<LinkProps>): JSX.Element;\n  /** Helper method to resolve an Href object into a string. */\n  resolveHref: (href: Href) => string;\n  Menu: typeof LinkMenu;\n  Trigger: typeof LinkTrigger;\n  Preview: typeof LinkPreview;\n  MenuItem: typeof LinkMenuItem;\n}\n\n/**\n * Component that renders a link using [`href`](#href) to another route.\n * By default, it accepts children and wraps them in a `<Text>` component.\n *\n * Uses an anchor tag (`<a>`) on web and performs a client-side navigation to preserve\n * the state of the website and navigate faster. The web-only attributes such as `target`,\n * `rel`, and `download` are supported and passed to the anchor tag on web. See\n * [`WebAnchorProps`](#webanchorprops) for more details.\n *\n * > **Note**: Client-side navigation works with both single-page apps,\n * and [static-rendering](/router/reference/static-rendering/).\n *\n * @example\n * ```tsx\n * import { Link } from 'expo-router';\n * import { View } from 'react-native';\n *\n * export default function Route() {\n *  return (\n *   <View>\n *    <Link href=\"/about\">About</Link>\n *   </View>\n *  );\n *}\n * ```\n */\nexport function Link(props: LinkProps) {\n  const isPreview = useIsPreview();\n  if (props.experimentalPreview && !isPreview) {\n    return <LinkWithPreview {...props} />;\n  }\n  return <BaseExpoRouterLink {...props} />;\n}\n\nLink.resolveHref = resolveHref;\nLink.Menu = LinkMenu;\nLink.Trigger = LinkTrigger;\nLink.Preview = LinkPreview;\nLink.MenuItem = LinkMenuItem;\n\nexport { LinkProps, WebAnchorProps };\n"]}